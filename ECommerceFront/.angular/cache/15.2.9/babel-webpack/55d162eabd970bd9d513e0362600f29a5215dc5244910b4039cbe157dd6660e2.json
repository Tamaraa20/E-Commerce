{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/navigation.service\";\nfunction RegisterComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" First Name is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" First Name is too Short. At least 2 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Name should start with an alphabet. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Last Name is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Last Name is too Short. At least 2 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Name should start with an alphabet. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Email is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Email is Invalid. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" address is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Mobile is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Password is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Password should be at least 6 and at the max 15 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Doesn't match with password! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor(fb, navigationService) {\n    this.fb = fb;\n    this.navigationService = navigationService;\n    this.invalidRPWD = false;\n    this.message = '';\n  }\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      firstname: ['', [Validators.required, Validators.minLength(2), Validators.pattern('[a-zA-z].*')]],\n      lastname: ['', [Validators.required, Validators.minLength(2), Validators.pattern('[a-zA-z].*')]],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', [Validators.required]],\n      mobile: ['', [Validators.required]],\n      pwd: ['', [Validators.required, Validators.minLength(2), Validators.pattern('[a-zA-z].*')]],\n      rpwd: ['']\n    });\n  }\n  get FirstName() {\n    return this.registerForm.get('firstname');\n  }\n  get LastName() {\n    return this.registerForm.get('lastname');\n  }\n  get Email() {\n    return this.registerForm.get('email');\n  }\n  get Address() {\n    return this.registerForm.get('address');\n  }\n  get Mobile() {\n    return this.registerForm.get('mobile');\n  }\n  get PWD() {\n    return this.registerForm.get('pwd');\n  }\n  get RPWD() {\n    return this.registerForm.get('rpwd');\n  }\n  register() {\n    let user = {\n      id: 0,\n      firstName: this.FirstName.value,\n      lastName: this.LastName.value,\n      email: this.Email.value,\n      address: this.Address.value,\n      mobile: this.Mobile.value,\n      password: this.PWD.value,\n      createdAt: '',\n      modifiedAt: ''\n    };\n    this.navigationService.registerUser(user).subscribe(res => {\n      // console.log(res);\n      this.message = res.toString();\n    });\n  }\n}\n_class = RegisterComponent;\n_class.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.NavigationService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-register\"]],\n  decls: 50,\n  vars: 16,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-3\"], [1, \"col\"], [\"for\", \"firstname\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"firstname\", \"formControlName\", \"firstname\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"for\", \"lastname\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"lastname\", \"formControlName\", \"lastname\", 1, \"form-control\"], [1, \"mb-3\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"address\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"address\", \"formControlName\", \"address\", 1, \"form-control\"], [\"for\", \"mobile\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"mobile\", \"formControlName\", \"mobile\", 1, \"form-control\"], [1, \"row\"], [1, \"col\", \"mb-3\"], [\"for\", \"pwd\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"pwd\", \"formControlName\", \"pwd\", 1, \"form-control\"], [\"for\", \"rpwd\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"rpwd\", \"formControlName\", \"rpwd\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"d-block\", \"mx-auto\", \"btn\", \"btn-outline-primary\", 3, \"disabled\"], [1, \"mt-3\", \"text-center\"], [1, \"text-success\"], [1, \"form-text\", \"text-danger\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵtemplate(6, RegisterComponent_div_6_Template, 2, 0, \"div\", 5);\n      i0.ɵɵtemplate(7, RegisterComponent_div_7_Template, 2, 0, \"div\", 5);\n      i0.ɵɵtemplate(8, RegisterComponent_div_8_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵtemplate(13, RegisterComponent_div_13_Template, 2, 0, \"div\", 5);\n      i0.ɵɵtemplate(14, RegisterComponent_div_14_Template, 2, 0, \"div\", 5);\n      i0.ɵɵtemplate(15, RegisterComponent_div_15_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 8)(17, \"label\", 9);\n      i0.ɵɵtext(18, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 10);\n      i0.ɵɵtemplate(20, RegisterComponent_div_20_Template, 2, 0, \"div\", 5);\n      i0.ɵɵtemplate(21, RegisterComponent_div_21_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 8)(23, \"label\", 11);\n      i0.ɵɵtext(24, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 12);\n      i0.ɵɵtemplate(26, RegisterComponent_div_26_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 8)(28, \"label\", 13);\n      i0.ɵɵtext(29, \"Mobile\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 14);\n      i0.ɵɵtemplate(31, RegisterComponent_div_31_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\", 15)(33, \"div\", 16)(34, \"label\", 17);\n      i0.ɵɵtext(35, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"input\", 18);\n      i0.ɵɵtemplate(37, RegisterComponent_div_37_Template, 2, 0, \"div\", 5);\n      i0.ɵɵtemplate(38, RegisterComponent_div_38_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"div\", 16)(40, \"label\", 19);\n      i0.ɵɵtext(41, \"Repeat Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(42, \"input\", 20);\n      i0.ɵɵtemplate(43, RegisterComponent_div_43_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"div\")(45, \"button\", 21);\n      i0.ɵɵtext(46, \" Create Account\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(47, \"div\", 22)(48, \"h5\", 23);\n      i0.ɵɵtext(49);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (ctx.FirstName.errors == null ? null : ctx.FirstName.errors[\"required\"]) && (ctx.FirstName.dirty || ctx.FirstName.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !!(ctx.FirstName.errors == null ? null : ctx.FirstName.errors[\"minlength\"]) && (ctx.FirstName.dirty || ctx.FirstName.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.FirstName.errors == null ? null : ctx.FirstName.errors[\"pattern\"]) && (ctx.FirstName.dirty || ctx.FirstName.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.LastName.errors == null ? null : ctx.LastName.errors[\"required\"]) && (ctx.LastName.dirty || ctx.LastName.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !!(ctx.LastName.errors == null ? null : ctx.LastName.errors[\"minlength\"]) && (ctx.LastName.dirty || ctx.LastName.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.LastName.errors == null ? null : ctx.LastName.errors[\"pattern\"]) && (ctx.LastName.dirty || ctx.LastName.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Email.errors == null ? null : ctx.Email.errors[\"required\"]) && (ctx.Email.dirty || ctx.Email.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !!(ctx.Email.errors == null ? null : ctx.Email.errors[\"email\"]) && (ctx.Email.dirty || ctx.Email.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Address.errors == null ? null : ctx.Address.errors[\"required\"]) && (ctx.Address.dirty || ctx.Address.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Mobile.errors == null ? null : ctx.Mobile.errors[\"required\"]) && (ctx.Mobile.dirty || ctx.Mobile.touched));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (ctx.PWD.errors == null ? null : ctx.PWD.errors[\"required\"]) && (ctx.PWD.dirty || ctx.PWD.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !!(ctx.PWD.errors == null ? null : ctx.PWD.errors[\"minlength\"]) && (ctx.PWD.dirty || ctx.PWD.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.invalidRPWD);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.message);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","RegisterComponent","constructor","fb","navigationService","ngOnInit","registerForm","group","firstname","required","minLength","pattern","lastname","email","address","mobile","pwd","rpwd","FirstName","get","LastName","Email","Address","Mobile","PWD","RPWD","register","user","id","firstName","value","lastName","password","createdAt","modifiedAt","registerUser","subscribe","res","message","toString","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\tamar\\Desktop\\ECommerce\\ECommerceFront\\src\\app\\register\\register.component.ts","C:\\Users\\tamar\\Desktop\\ECommerce\\ECommerceFront\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationService } from '../services/navigation.service';\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm!: FormGroup\n  invalidRPWD: boolean = false;\n  message = '';\n\n  constructor(private fb: FormBuilder, private navigationService: NavigationService) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.fb.group({\n      firstname: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.pattern('[a-zA-z].*')\n        ],\n      ],\n      lastname: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.pattern('[a-zA-z].*')\n        ]\n      ],\n      email: [\n        '',\n        [\n          Validators.required, Validators.email\n        ]\n      ],\n      address: [\n        '', [Validators.required]\n      ],\n      mobile: [\n        '', [Validators.required]\n      ],\n      pwd: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.pattern('[a-zA-z].*')\n        ]\n      ],\n      rpwd: ['']\n    })\n  }\n  get FirstName(): FormControl {\n    return this.registerForm.get('firstname') as FormControl\n  }\n  get LastName(): FormControl {\n    return this.registerForm.get('lastname') as FormControl\n  }\n  get Email(): FormControl {\n    return this.registerForm.get('email') as FormControl\n  }\n  get Address(): FormControl {\n    return this.registerForm.get('address') as FormControl\n  }\n  get Mobile(): FormControl {\n    return this.registerForm.get('mobile') as FormControl\n  }\n  get PWD(): FormControl {\n    return this.registerForm.get('pwd') as FormControl\n  }\n  get RPWD(): FormControl {\n    return this.registerForm.get('rpwd') as FormControl\n  }\n\n  register() {\n    let user: User = {\n      id: 0,\n      firstName: this.FirstName.value,\n      lastName: this.LastName.value,\n      email: this.Email.value,\n      address: this.Address.value,\n      mobile: this.Mobile.value,\n      password: this.PWD.value,\n      createdAt: '',\n      modifiedAt: ''\n    }\n    this.navigationService.registerUser(user).subscribe((res:any) => {\n      // console.log(res);\n      this.message=res.toString()\n    })\n  }\n\n}\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n\n  <div class=\"row mb-3\">\n    <div class=\"col\">\n      <label for=\"firstname\" class=\"form-label\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstname\" formControlName=\"firstname\">\n\n      <!-- Errors -->\n      <div class=\"form-text text-danger\"\n        *ngIf=\"FirstName.errors?.['required'] && (FirstName.dirty || FirstName.touched)\">\n        First Name is Required\n      </div>\n      <div class=\"form-text text-danger\"\n        *ngIf=\"!!FirstName.errors?.['minlength'] && (FirstName.dirty || FirstName.touched)\">\n        First Name is too Short. At least 2 characters.\n      </div>\n      <div class=\"form-text text-danger\"\n        *ngIf=\"FirstName.errors?.['pattern'] && (FirstName.dirty || FirstName.touched)\">\n        Name should start with an alphabet.\n      </div>\n    </div>\n\n    <div class=\"col\">\n      <label for=\"lastname\" class=\"form-label\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastname\" formControlName=\"lastname\">\n      <div class=\"form-text text-danger\" *ngIf=\"LastName.errors?.['required'] && (LastName.dirty || LastName.touched)\">\n        Last Name is Required\n      </div>\n      <div class=\"form-text text-danger\"\n        *ngIf=\"!!LastName.errors?.['minlength'] && (LastName.dirty || LastName.touched)\">\n        Last Name is too Short. At least 2 characters.\n      </div>\n      <div class=\"form-text text-danger\" *ngIf=\"LastName.errors?.['pattern'] && (LastName.dirty || LastName.touched)\">\n        Name should start with an alphabet.\n      </div>\n    </div>\n  </div>\n\n  <div class=\"mb-3\">\n    <label for=\"email\" class=\"form-label\">Email</label>\n    <input type=\"text\" class=\"form-control\" id=\"email\" formControlName=\"email\">\n    <div class=\"form-text text-danger\" *ngIf=\"Email.errors?.['required'] && (Email.dirty || Email.touched)\">\n      Email is Required\n    </div>\n    <div class=\"form-text text-danger\" *ngIf=\"!!Email.errors?.['email'] && (Email.dirty || Email.touched)\">\n      Email is Invalid.\n    </div>\n\n  </div>\n  <div class=\"mb-3\">\n    <label for=\"address\" class=\"form-label\">Address</label>\n    <input type=\"text\" class=\"form-control\" id=\"address\" formControlName=\"address\">\n    <div class=\"form-text text-danger\" *ngIf=\"Address.errors?.['required'] && (Address.dirty || Address.touched)\">\n      address is Required\n    </div>\n  </div>\n\n  <div class=\"mb-3\">\n    <label for=\"mobile\" class=\"form-label\">Mobile</label>\n    <input type=\"text\" class=\"form-control\" id=\"mobile\" formControlName=\"mobile\">\n    <div class=\"form-text text-danger\" *ngIf=\"Mobile.errors?.['required'] && (Mobile.dirty || Mobile.touched)\">\n      Mobile is Required\n    </div>\n  </div>\n  <!-- password and repeate password -->\n  <div class=\"row\">\n    <div class=\"col mb-3\">\n      <label for=\"pwd\" class=\"form-label\">Password</label>\n      <input type=\"password\" id=\"pwd\" class=\"form-control\" formControlName=\"pwd\">\n      <div class=\"form-text text-danger\" *ngIf=\"PWD.errors?.['required'] && (PWD.dirty || PWD.touched)\">\n        Password is Required\n      </div>\n      <div class=\"form-text text-danger\" *ngIf=\"!!PWD.errors?.['minlength'] && (PWD.dirty || PWD.touched)\">\n        Password should be at least 6 and at the max 15 characters long.\n      </div>\n    </div>\n    <div class=\"col mb-3\">\n      <label for=\"rpwd\" class=\"form-label\">Repeat Password</label>\n      <input type=\"password\" id=\"rpwd\" class=\"form-control\" formControlName=\"rpwd\">\n\n      <div class=\"form-text text-danger\" *ngIf=\"invalidRPWD\">\n        Doesn't match with password!\n      </div>\n\n\n    </div>\n  </div>\n\n  <!-- account button -->\n  <div>\n    <button type=\"submit\" class=\"d-block mx-auto btn btn-outline-primary\" [disabled]=\"registerForm.invalid\">\n      Create Account</button>\n  </div>\n\n  <div class=\"mt-3 text-center\">\n    <h5 class=\"text-success\">{{message}}</h5>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}