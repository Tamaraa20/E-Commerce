{"ast":null,"code":"var _class;\nimport { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/navigation.service\";\nimport * as i2 from \"../services/user-authentication.service\";\nimport * as i3 from \"../services/cart.service\";\nimport * as i4 from \"@angular/router\";\nexport class OrderComponent {\n  constructor(navigationService, userAuthentication, cartService, router) {\n    this.navigationService = navigationService;\n    this.userAuthentication = userAuthentication;\n    this.cartService = cartService;\n    this.router = router;\n    this.selectedPaymentMethodName = '';\n    this.selectedPaymentMethod = new FormControl('0');\n    this.address = '';\n    this.mobileNumber = '';\n    this.displaySpinner = false;\n    this.message = '';\n    this.paymentMethods = [];\n    this.usersCart = {\n      id: 0,\n      user: this.userAuthentication.getUser(),\n      cartItems: [],\n      ordered: false,\n      orderedOn: ''\n    };\n    this.userPaymentInfo = {\n      id: 0,\n      user: this.userAuthentication.getUser(),\n      paymentMethod: {\n        id: 0,\n        type: '',\n        provider: '',\n        available: false,\n        reason: ''\n      },\n      totalAmount: 0,\n      shipingCharges: 0,\n      amountReduced: 0,\n      amountPaid: 0,\n      createdAt: ''\n    };\n  }\n  ngOnInit() {\n    // get payment\n    this.navigationService.getPaymentMethod().subscribe(res => {\n      this.paymentMethods = res;\n    });\n    this.selectedPaymentMethod.valueChanges.subscribe(res => {\n      if (res === '0') {\n        this.selectedPaymentMethodName = '';\n      } else {\n        this.selectedPaymentMethodName = res.toString();\n      }\n    });\n    // get cart\n    this.navigationService.getActiveCartOfUser(this.userAuthentication.getUser().id).subscribe(res => {\n      this.usersCart = res;\n      this.cartService.calculatePayment(res, this.userPaymentInfo);\n    });\n    // set address and phone number\n    this.address = this.userAuthentication.getUser().address;\n    this.mobileNumber = this.userAuthentication.getUser().mobile;\n  }\n}\n_class = OrderComponent;\n_class.ɵfac = function OrderComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NavigationService), i0.ɵɵdirectiveInject(i2.UserAuthenticationService), i0.ɵɵdirectiveInject(i3.CartService), i0.ɵɵdirectiveInject(i4.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-order\"]],\n  decls: 2,\n  vars: 0,\n  template: function OrderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"order works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAEA,SAASA,WAAW,QAAQ,gBAAgB;;;;;;AAa5C,OAAM,MAAOC,cAAc;EAqCzBC,YACUC,iBAAoC,EACrCC,kBAA6C,EAC7CC,WAAwB,EACvBC,MAAc;IAHd,sBAAiB,GAAjBH,iBAAiB;IAClB,uBAAkB,GAAlBC,kBAAkB;IAClB,gBAAW,GAAXC,WAAW;IACV,WAAM,GAANC,MAAM;IAxChB,8BAAyB,GAAG,EAAE;IAC9B,0BAAqB,GAAG,IAAIN,WAAW,CAAC,GAAG,CAAC;IAE5C,YAAO,GAAG,EAAE;IACZ,iBAAY,GAAG,EAAE;IACjB,mBAAc,GAAG,KAAK;IACtB,YAAO,GAAG,EAAE;IAEZ,mBAAc,GAAoB,EAAE;IAEpC,cAAS,GAAS;MAChBO,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,IAAI,CAACJ,kBAAkB,CAACK,OAAO,EAAE;MACvCC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE;KACZ;IAED,oBAAe,GAAY;MACzBL,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,IAAI,CAACJ,kBAAkB,CAACK,OAAO,EAAE;MACvCI,aAAa,EAAE;QACbN,EAAE,EAAE,CAAC;QACLO,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE,KAAK;QAChBC,MAAM,EAAE;OACT;MACDC,WAAW,EAAE,CAAC;MACdC,cAAc,EAAE,CAAC;MACjBC,aAAa,EAAE,CAAC;MAChBC,UAAU,EAAE,CAAC;MACbC,SAAS,EAAE;KACZ;EAQG;EAGJC,QAAQ;IAGN;IACA,IAAI,CAACpB,iBAAiB,CAACqB,gBAAgB,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAI;MAC1D,IAAI,CAACC,cAAc,GAAGD,GAAG;IAC3B,CAAC,CAAC;IAEF,IAAI,CAACE,qBAAqB,CAACC,YAAY,CAACJ,SAAS,CAAEC,GAAQ,IAAI;MAC7D,IAAIA,GAAG,KAAK,GAAG,EAAE;QACf,IAAI,CAACI,yBAAyB,GAAG,EAAE;OACpC,MACI;QACH,IAAI,CAACA,yBAAyB,GAAGJ,GAAG,CAACK,QAAQ,EAAE;;IAEnD,CAAC,CAAC;IACF;IAEA,IAAI,CAAC5B,iBAAiB,CAAC6B,mBAAmB,CACvC,IAAI,CAAC5B,kBAAkB,CAACK,OAAO,EAAE,CAACF,EAAE,CAAC,CACrCkB,SAAS,CAAEC,GAAQ,IAAI;MACtB,IAAI,CAACO,SAAS,GAAGP,GAAG;MACpB,IAAI,CAACrB,WAAW,CAAC6B,gBAAgB,CAACR,GAAG,EAAE,IAAI,CAACS,eAAe,CAAC;IAC9D,CAAC,CAAC;IAIJ;IACA,IAAI,CAACC,OAAO,GAAG,IAAI,CAAChC,kBAAkB,CAACK,OAAO,EAAE,CAAC2B,OAAO;IACxD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACjC,kBAAkB,CAACK,OAAO,EAAE,CAAC6B,MAAM;EAG9D;;SA7EWrC,cAAc;;mBAAdA,MAAc;AAAA;;QAAdA,MAAc;EAAAsC;EAAAC;EAAAC;EAAAC;IAAA;MCf3BC,yBAAG;MAAAA,4BAAY;MAAAA,iBAAI","names":["FormControl","OrderComponent","constructor","navigationService","userAuthentication","cartService","router","id","user","getUser","cartItems","ordered","orderedOn","paymentMethod","type","provider","available","reason","totalAmount","shipingCharges","amountReduced","amountPaid","createdAt","ngOnInit","getPaymentMethod","subscribe","res","paymentMethods","selectedPaymentMethod","valueChanges","selectedPaymentMethodName","toString","getActiveCartOfUser","usersCart","calculatePayment","userPaymentInfo","address","mobileNumber","mobile","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\tamar\\Desktop\\ECommerce\\ECommerceFront\\src\\app\\order\\order.component.ts","C:\\Users\\tamar\\Desktop\\ECommerce\\ECommerceFront\\src\\app\\order\\order.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { PaymentMethod } from '../models/paymentMethod';\nimport { FormControl } from '@angular/forms';\nimport { Cart } from '../models/cart';\nimport { Payment } from '../models/payment';\nimport { NavigationService } from '../services/navigation.service';\nimport { Router } from '@angular/router';\nimport { UserAuthenticationService } from '../services/user-authentication.service';\nimport { CartService } from '../services/cart.service';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent {\n  selectedPaymentMethodName = '';\n  selectedPaymentMethod = new FormControl('0');\n\n  address = '';\n  mobileNumber = '';\n  displaySpinner = false;\n  message = ''\n\n  paymentMethods: PaymentMethod[] = [];\n\n  usersCart: Cart = {\n    id: 0,\n    user: this.userAuthentication.getUser(),\n    cartItems: [],\n    ordered: false,\n    orderedOn: ''\n  }\n\n  userPaymentInfo: Payment = {\n    id: 0,\n    user: this.userAuthentication.getUser(),\n    paymentMethod: {\n      id: 0,\n      type: '',\n      provider: '',\n      available: false,\n      reason: ''\n    },\n    totalAmount: 0,\n    shipingCharges: 0,\n    amountReduced: 0,\n    amountPaid: 0,\n    createdAt: ''\n  }\n  classname: string;\n\n  constructor(\n    private navigationService: NavigationService,\n    public userAuthentication: UserAuthenticationService,\n    public cartService: CartService,\n    private router: Router\n  ) { }\n\n\n  ngOnInit(): void {\n\n\n    // get payment\n    this.navigationService.getPaymentMethod().subscribe((res) => {\n      this.paymentMethods = res\n    })\n\n    this.selectedPaymentMethod.valueChanges.subscribe((res: any) => {\n      if (res === '0') {\n        this.selectedPaymentMethodName = '';\n      }\n      else {\n        this.selectedPaymentMethodName = res.toString();\n      }\n    });\n    // get cart\n\n    this.navigationService.getActiveCartOfUser\n      (this.userAuthentication.getUser().id)\n      .subscribe((res: any) => {\n        this.usersCart = res;\n        this.cartService.calculatePayment(res, this.userPaymentInfo)\n      });\n\n\n\n    // set address and phone number\n    this.address = this.userAuthentication.getUser().address;\n    this.mobileNumber = this.userAuthentication.getUser().mobile;\n\n\n  }\n}\n","<p>order works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}