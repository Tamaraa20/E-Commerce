{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CartComponent = class CartComponent {\n  constructor(navigationService, userAuthentication, cartService) {\n    this.navigationService = navigationService;\n    this.userAuthentication = userAuthentication;\n    this.cartService = cartService;\n    this.usersCart = {\n      id: 0,\n      user: this.userAuthentication.getUser(),\n      cartItems: [],\n      ordered: false,\n      orderedOn: ''\n    };\n    this.userPaymentInfo = {\n      id: 0,\n      user: this.userAuthentication.getUser(),\n      paymentMethod: {\n        id: 0,\n        type: '',\n        provider: '',\n        available: false,\n        reason: ''\n      },\n      totalAmount: 0,\n      shipingCharges: 0,\n      amountReduced: 0,\n      amountPaid: 0,\n      createdAt: ''\n    };\n    this.usersPreviousCarts = [];\n  }\n  ngOnInit() {\n    // getcart\n    this.navigationService.getActiveCartOfUser(this.userAuthentication.getUser().id).subscribe(res => {\n      this.usersCart = res;\n      // calculate payment\n      this.cartService.calculatePayment(this.usersCart, this.userPaymentInfo);\n    });\n    // get previus carts\n    this.navigationService.getAllPreviousCarts(this.userAuthentication.getUser().id).subscribe(res => {\n      this.usersPreviousCarts = res;\n    });\n  }\n  deleteCartItem(cartItemId) {\n    this.navigationService.deleteCartItem(cartItemId).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.error(error);\n    });\n    window.location.reload();\n  }\n};\nCartComponent = __decorate([Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})], CartComponent);\nexport { CartComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAalC,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EA4BxBC,YACSC,iBAAoC,EACpCC,kBAA6C,EAC7CC,WAAwB;IAFxB,sBAAiB,GAAjBF,iBAAiB;IACjB,uBAAkB,GAAlBC,kBAAkB;IAClB,gBAAW,GAAXC,WAAW;IA9BpB,cAAS,GAAS;MAChBC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,IAAI,CAACH,kBAAkB,CAACI,OAAO,EAAE;MACvCC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE;KACZ;IAED,oBAAe,GAAY;MACzBL,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,IAAI,CAACH,kBAAkB,CAACI,OAAO,EAAE;MACvCI,aAAa,EAAE;QACbN,EAAE,EAAE,CAAC;QACLO,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE,KAAK;QAChBC,MAAM,EAAE;OACT;MACDC,WAAW,EAAE,CAAC;MACdC,cAAc,EAAE,CAAC;MACjBC,aAAa,EAAE,CAAC;MAChBC,UAAU,EAAE,CAAC;MACbC,SAAS,EAAE;KACZ;IACD,uBAAkB,GAAW,EAAE;EAO3B;EAGJC,QAAQ;IAEN;IACA,IAAI,CAACnB,iBAAiB,CAACoB,mBAAmB,CAAC,IAAI,CAACnB,kBAAkB,CAACI,OAAO,EAAE,CAACF,EAAE,CAAC,CAC7EkB,SAAS,CAAEC,GAAQ,IAAI;MACtB,IAAI,CAACC,SAAS,GAAGD,GAAG;MAEpB;MACA,IAAI,CAACpB,WAAW,CAACsB,gBAAgB,CAC/B,IAAI,CAACD,SAAS,EAAE,IAAI,CAACE,eAAe,CACrC;IACH,CAAC,CAAC;IACJ;IACA,IAAI,CAACzB,iBAAiB,CAAC0B,mBAAmB,CAAC,IAAI,CAACzB,kBAAkB,CAACI,OAAO,EAAE,CAACF,EAAE,CAAC,CAC7EkB,SAAS,CAAEC,GAAQ,IAAI;MACtB,IAAI,CAACK,kBAAkB,GAAGL,GAAG;IAC/B,CAAC,CAAC;EACN;EAEAM,cAAc,CAACC,UAAkB;IAC/B,IAAI,CAAC7B,iBAAiB,CAAC4B,cAAc,CAACC,UAAU,CAAC,CAACR,SAAS,CACxDS,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;IACDC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B;CAED;AAlEYtC,aAAa,eALzBD,SAAS,CAAC;EACTwC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWzC,aAAa,CAkEzB;SAlEYA,aAAa","names":["Component","CartComponent","constructor","navigationService","userAuthentication","cartService","id","user","getUser","cartItems","ordered","orderedOn","paymentMethod","type","provider","available","reason","totalAmount","shipingCharges","amountReduced","amountPaid","createdAt","ngOnInit","getActiveCartOfUser","subscribe","res","usersCart","calculatePayment","userPaymentInfo","getAllPreviousCarts","usersPreviousCarts","deleteCartItem","cartItemId","response","console","log","error","window","location","reload","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\tamar\\Desktop\\ECommerce\\ECommerceFront\\src\\app\\cart\\cart.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Cart } from '../models/cart';\nimport { Payment } from '../models/payment';\nimport { NavigationService } from '../services/navigation.service';\nimport { Router } from '@angular/router';\nimport { UserAuthenticationService } from '../services/user-authentication.service';\nimport { CartService } from '../services/cart.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent {\n  usersCart: Cart = {\n    id: 0,\n    user: this.userAuthentication.getUser(),\n    cartItems: [],\n    ordered: false,\n    orderedOn: ''\n  }\n\n  userPaymentInfo: Payment = {\n    id: 0,\n    user: this.userAuthentication.getUser(),\n    paymentMethod: {\n      id: 0,\n      type: '',\n      provider: '',\n      available: false,\n      reason: ''\n    },\n    totalAmount: 0,\n    shipingCharges: 0,\n    amountReduced: 0,\n    amountPaid: 0,\n    createdAt: ''\n  }\n  usersPreviousCarts: Cart[] = [];\n  data: any;\n\n  constructor(\n    public navigationService: NavigationService,\n    public userAuthentication: UserAuthenticationService,\n    public cartService: CartService\n  ) { }\n\n\n  ngOnInit(): void {\n\n    // getcart\n    this.navigationService.getActiveCartOfUser(this.userAuthentication.getUser().id)\n      .subscribe((res: any) => {\n        this.usersCart = res;\n\n        // calculate payment\n        this.cartService.calculatePayment(\n          this.usersCart, this.userPaymentInfo\n        )\n      });\n    // get previus carts\n    this.navigationService.getAllPreviousCarts(this.userAuthentication.getUser().id)\n      .subscribe((res: any) => {\n        this.usersPreviousCarts = res;\n      })\n  }\n\n  deleteCartItem(cartItemId: number): void {\n    this.navigationService.deleteCartItem(cartItemId).subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n    window.location.reload();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}