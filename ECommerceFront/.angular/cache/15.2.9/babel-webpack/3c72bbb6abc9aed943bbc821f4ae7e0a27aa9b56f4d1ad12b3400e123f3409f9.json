{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/navigation.service\";\nexport class RegisterComponent {\n  constructor(fb, navigationService) {\n    this.fb = fb;\n    this.navigationService = navigationService;\n    this.invalidRPWD = false;\n    this.message = '';\n  }\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      firstname: ['', [Validators.required, Validators.minLength(2), Validators.pattern('[a-zA-z].*')]],\n      lastname: ['', [Validators.required, Validators.minLength(2), Validators.pattern('[a-zA-z].*')]],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', [Validators.required]],\n      mobile: ['', [Validators.required]],\n      pwd: ['', [Validators.required, Validators.minLength(2), Validators.pattern('[a-zA-z].*')]],\n      rpwd: ['']\n    });\n  }\n  get FirstName() {\n    return this.registerForm.get('firstname');\n  }\n  get LastName() {\n    return this.registerForm.get('lastname');\n  }\n  get Email() {\n    return this.registerForm.get('email');\n  }\n  get Address() {\n    return this.registerForm.get('address');\n  }\n  get Mobile() {\n    return this.registerForm.get('mobile');\n  }\n  get PWD() {\n    return this.registerForm.get('pwd');\n  }\n  get RPWD() {\n    return this.registerForm.get('rpwd');\n  }\n  register() {\n    let user = {\n      id: 0,\n      firstName: this.FirstName.value,\n      lastName: this.LastName.value,\n      email: this.Email.value,\n      address: this.Address.value,\n      mobile: this.Mobile.value,\n      password: this.PWD.value,\n      createdAt: '',\n      modifiedAt: ''\n    };\n    this.navigationService.registerUser(user).subscribe(res => {\n      // console.log(res);\n      this.message = res.toString();\n    });\n  }\n}\n_class = RegisterComponent;\n_class.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.NavigationService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-register\"]],\n  decls: 2,\n  vars: 0,\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"register works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","RegisterComponent","constructor","fb","navigationService","ngOnInit","registerForm","group","firstname","required","minLength","pattern","lastname","email","address","mobile","pwd","rpwd","FirstName","get","LastName","Email","Address","Mobile","PWD","RPWD","register","user","id","firstName","value","lastName","password","createdAt","modifiedAt","registerUser","subscribe","res","message","toString","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\tamar\\Desktop\\ECommerce\\ECommerceFront\\src\\app\\register\\register.component.ts","C:\\Users\\tamar\\Desktop\\ECommerce\\ECommerceFront\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationService } from '../services/navigation.service';\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm!: FormGroup\n  invalidRPWD: boolean = false;\n  message = '';\n\n  constructor(private fb: FormBuilder, private navigationService: NavigationService) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.fb.group({\n      firstname: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.pattern('[a-zA-z].*')\n        ],\n      ],\n      lastname: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.pattern('[a-zA-z].*')\n        ]\n      ],\n      email: [\n        '',\n        [\n          Validators.required, Validators.email\n        ]\n      ],\n      address: [\n        '', [Validators.required]\n      ],\n      mobile: [\n        '', [Validators.required]\n      ],\n      pwd: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.pattern('[a-zA-z].*')\n        ]\n      ],\n      rpwd: ['']\n    })\n  }\n  get FirstName(): FormControl {\n    return this.registerForm.get('firstname') as FormControl\n  }\n  get LastName(): FormControl {\n    return this.registerForm.get('lastname') as FormControl\n  }\n  get Email(): FormControl {\n    return this.registerForm.get('email') as FormControl\n  }\n  get Address(): FormControl {\n    return this.registerForm.get('address') as FormControl\n  }\n  get Mobile(): FormControl {\n    return this.registerForm.get('mobile') as FormControl\n  }\n  get PWD(): FormControl {\n    return this.registerForm.get('pwd') as FormControl\n  }\n  get RPWD(): FormControl {\n    return this.registerForm.get('rpwd') as FormControl\n  }\n\n  register() {\n    let user: User = {\n      id: 0,\n      firstName: this.FirstName.value,\n      lastName: this.LastName.value,\n      email: this.Email.value,\n      address: this.Address.value,\n      mobile: this.Mobile.value,\n      password: this.PWD.value,\n      createdAt: '',\n      modifiedAt: ''\n    }\n    this.navigationService.registerUser(user).subscribe((res:any) => {\n      // console.log(res);\n      this.message=res.toString()\n    })\n  }\n\n}\n","<p>register works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}