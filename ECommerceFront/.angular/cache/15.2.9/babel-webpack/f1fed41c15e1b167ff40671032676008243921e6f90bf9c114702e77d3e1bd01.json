{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/navigation.service\";\nimport * as i3 from \"../services/user-authentication.service\";\nexport class LoginComponent {\n  constructor(fb, navigationService, userAuthentication) {\n    this.fb = fb;\n    this.navigationService = navigationService;\n    this.userAuthentication = userAuthentication;\n    this.message = '';\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      pwd: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(15)]]\n    });\n  }\n  get Email() {\n    return this.loginForm.get('email');\n  }\n  get PWD() {\n    return this.loginForm.get('pwd');\n  }\n  login() {\n    this.navigationService.loginUser(this.Email.value, this.PWD.value).subscribe(res => {\n      if (res.toString() !== 'invalid') {\n        this.message = 'Logged In Successfully.';\n        this.utilityService.setUser(res.toString());\n        console.log(this.utilityService.getUser());\n      } else {\n        this.message = 'Invalid Credentials!';\n      }\n    });\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.NavigationService), i0.ɵɵdirectiveInject(i3.UserAuthenticationService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 2,\n  vars: 0,\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"login works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAA8CA,UAAU,QAAQ,gBAAgB;;;;;AAShF,OAAM,MAAOC,cAAc;EAIzBC,YACUC,EAAe,EACfC,iBAAoC,EACrCC,kBAA6C;IAF5C,OAAE,GAAFF,EAAE;IACF,sBAAiB,GAAjBC,iBAAiB;IAClB,uBAAkB,GAAlBC,kBAAkB;IAL3B,YAAO,GAAG,EAAE;EAMN;EAGJC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDE,GAAG,EAAE,CACH,EAAE,EACF,CACEX,UAAU,CAACU,QAAQ,EACnBV,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,EACvBZ,UAAU,CAACa,SAAS,CAAC,EAAE,CAAC,CACzB;KAGJ,CAAC;EACJ;EACA,IAAIC,KAAK;IACP,OAAO,IAAI,CAACP,SAAS,CAACQ,GAAG,CAAC,OAAO,CAAgB;EACnD;EACA,IAAIC,GAAG;IACL,OAAO,IAAI,CAACT,SAAS,CAACQ,GAAG,CAAC,KAAK,CAAgB;EACjD;EACAE,KAAK;IACH,IAAI,CAACb,iBAAiB,CACnBc,SAAS,CAAC,IAAI,CAACJ,KAAK,CAACK,KAAK,EAAE,IAAI,CAACH,GAAG,CAACG,KAAK,CAAC,CAC3CC,SAAS,CAAEC,GAAQ,IAAI;MACtB,IAAIA,GAAG,CAACC,QAAQ,EAAE,KAAK,SAAS,EAAE;QAChC,IAAI,CAACC,OAAO,GAAG,yBAAyB;QACxC,IAAI,CAACC,cAAc,CAACC,OAAO,CAACJ,GAAG,CAACC,QAAQ,EAAE,CAAC;QAC3CI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,cAAc,CAACI,OAAO,EAAE,CAAC;OAC3C,MAAM;QACL,IAAI,CAACL,OAAO,GAAG,sBAAsB;;IAEzC,CAAC,CAAC;EACN;;SA3CStB,cAAc;;mBAAdA,MAAc;AAAA;;QAAdA,MAAc;EAAA4B;EAAAC;EAAAC;EAAAC;IAAA;MCV3BC,yBAAG;MAAAA,4BAAY;MAAAA,iBAAI","names":["Validators","LoginComponent","constructor","fb","navigationService","userAuthentication","ngOnInit","loginForm","group","email","required","pwd","minLength","maxLength","Email","get","PWD","login","loginUser","value","subscribe","res","toString","message","utilityService","setUser","console","log","getUser","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\tamar\\Desktop\\ECommerce\\ECommerceFront\\src\\app\\login\\login.component.ts","C:\\Users\\tamar\\Desktop\\ECommerce\\ECommerceFront\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationService } from '../services/navigation.service';\nimport { UserAuthenticationService } from '../services/user-authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  message = ''\n\n  constructor(\n    private fb: FormBuilder,\n    private navigationService: NavigationService,\n    public userAuthentication: UserAuthenticationService,\n    ) { }\n\n\n    ngOnInit(): void {\n      this.loginForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        pwd: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(6),\n            Validators.maxLength(15)\n          ]\n        ],\n\n      })\n    }\n    get Email(): FormControl {\n      return this.loginForm.get('email') as FormControl\n    }\n    get PWD(): FormControl {\n      return this.loginForm.get('pwd') as FormControl\n    }\n    login() {\n      this.navigationService\n        .loginUser(this.Email.value, this.PWD.value)\n        .subscribe((res: any) => {\n          if (res.toString() !== 'invalid') {\n            this.message = 'Logged In Successfully.';\n            this.utilityService.setUser(res.toString());\n            console.log(this.utilityService.getUser());\n          } else {\n            this.message = 'Invalid Credentials!';\n          }\n        });\n    }\n}\n","<p>login works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}