{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./user-authentication.service\";\nimport * as i2 from \"./navigation.service\";\nexport class CartService {\n  constructor(userAuthentication, navigationService) {\n    this.userAuthentication = userAuthentication;\n    this.navigationService = navigationService;\n  }\n  applyDiscount(price, discount) {\n    let finalPrice = price - price * (discount / 100);\n    return finalPrice;\n  }\n}\n_class = CartService;\n_class.ɵfac = function CartService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.UserAuthenticationService), i0.ɵɵinject(i2.NavigationService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,WAAW;EAEtBC,YAAmBC,kBAA6C,EACtDC,iBAAoC;IAD3B,uBAAkB,GAAlBD,kBAAkB;IAC3B,sBAAiB,GAAjBC,iBAAiB;EAAuB;EAElDC,aAAa,CAACC,KAAa,EAAEC,QAAgB;IAC3C,IAAIC,UAAU,GAAWF,KAAK,GAAGA,KAAK,IAAIC,QAAQ,GAAG,GAAG,CAAC;IACzD,OAAOC,UAAU;EACnB;;SARWP,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAQ,SAAXR,MAAW;EAAAS,YAFV;AAAM","names":["CartService","constructor","userAuthentication","navigationService","applyDiscount","price","discount","finalPrice","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\tamar\\Desktop\\ECommerce\\ECommerceFront\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Product } from '../models/product';\nimport { UserAuthenticationService } from './user-authentication.service';\nimport { NavigationService } from './navigation.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  constructor(public userAuthentication: UserAuthenticationService,\n    private navigationService: NavigationService) { }\n\n  applyDiscount(price: number, discount: number): number {\n    let finalPrice: number = price - price * (discount / 100);\n    return finalPrice;\n  }\n\n  // addToCart(product: Product) {\n  //   let productid = product.productId\n  //   let userid = this.userAuthentication.getUser().id;\n\n  //   this.navigationService.addToCard(userid, productid).subscribe((res) => {\n  //     if (res.toString() === 'inserted') this.changeCart.next(1)\n  //   })\n  // }\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}