{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@auth0/angular-jwt\";\nimport * as i2 from \"./navigation.service\";\nexport class UserAuthenticationService {\n  constructor(jwt, navigationService) {\n    this.jwt = jwt;\n    this.navigationService = navigationService;\n  }\n  isLoggedIn() {\n    return localStorage.getItem('user') ? true : false;\n  }\n  loggoutUser() {\n    localStorage.removeItem('user');\n  }\n  getUser() {\n    let token = this.jwt.decodeToken();\n    let user = {\n      id: token.id,\n      firstName: token.firstName,\n      lastName: token.lastName,\n      email: token.email,\n      address: token.address,\n      mobile: token.mobile,\n      password: '',\n      createdAt: token.createdAt,\n      modifiedAt: token.modifiedAt\n    };\n    return user;\n  }\n  setUser(token) {\n    localStorage.setItem('user', token);\n  }\n}\n_class = UserAuthenticationService;\n_class.ɵfac = function UserAuthenticationService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.JwtHelperService), i0.ɵɵinject(i2.NavigationService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,yBAAyB;EAGlCC,YAAoBC,GAAqB,EAC/BC,iBAAoC;IAD1B,QAAG,GAAHD,GAAG;IACb,sBAAiB,GAAjBC,iBAAiB;EAAwB;EAGnDC,UAAU;IACR,OAAOC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,KAAK;EACpD;EAEAC,WAAW;IACTF,YAAY,CAACG,UAAU,CAAC,MAAM,CAAC;EACjC;EAEAC,OAAO;IACL,IAAIC,KAAK,GAAG,IAAI,CAACR,GAAG,CAACS,WAAW,EAAE;IAClC,IAAIC,IAAI,GAAS;MACfC,EAAE,EAAEH,KAAK,CAACG,EAAE;MACZC,SAAS,EAAEJ,KAAK,CAACI,SAAS;MAC1BC,QAAQ,EAAEL,KAAK,CAACK,QAAQ;MACxBC,KAAK,EAAEN,KAAK,CAACM,KAAK;MAClBC,OAAO,EAAEP,KAAK,CAACO,OAAO;MACtBC,MAAM,EAAER,KAAK,CAACQ,MAAM;MACpBC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAEV,KAAK,CAACU,SAAS;MAC1BC,UAAU,EAAEX,KAAK,CAACW;KACnB;IACD,OAAOT,IAAI;EACb;EAEAU,OAAO,CAACZ,KAAa;IACnBL,YAAY,CAACkB,OAAO,CAAC,MAAM,EAAEb,KAAK,CAAC;EACrC;;SAjCSV,yBAAyB;;mBAAzBA,MAAyB;AAAA;;SAAzBA,MAAyB;EAAAwB,SAAzBxB,MAAyB;EAAAyB,YAFxB;AAAM","names":["UserAuthenticationService","constructor","jwt","navigationService","isLoggedIn","localStorage","getItem","loggoutUser","removeItem","getUser","token","decodeToken","user","id","firstName","lastName","email","address","mobile","password","createdAt","modifiedAt","setUser","setItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\tamar\\Desktop\\ECommerce\\ECommerceFront\\src\\app\\services\\user-authentication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { NavigationService } from './navigation.service';\nimport { User } from '../models/user';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAuthenticationService {\n\n\n    constructor(private jwt: JwtHelperService,\n      private navigationService: NavigationService,) { }\n\n\n    isLoggedIn() {\n      return localStorage.getItem('user') ? true : false;\n    }\n\n    loggoutUser() {\n      localStorage.removeItem('user')\n    }\n\n    getUser(): User {\n      let token = this.jwt.decodeToken();\n      let user: User = {\n        id: token.id,\n        firstName: token.firstName,\n        lastName: token.lastName,\n        email: token.email,\n        address: token.address,\n        mobile: token.mobile,\n        password: '',\n        createdAt: token.createdAt,\n        modifiedAt: token.modifiedAt,\n      };\n      return user;\n    }\n\n    setUser(token: string) {\n      localStorage.setItem('user', token)\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}