{"ast":null,"code":"var _class;\nimport { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/navigation.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class AccountComponent {\n  constructor(navigationService, route, router) {\n    this.navigationService = navigationService;\n    this.route = route;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.accountForm = new FormGroup({\n      firstName: new FormControl(),\n      lastName: new FormControl(),\n      email: new FormControl(),\n      address: new FormControl(),\n      mobile: new FormControl(),\n      id: new FormControl()\n    });\n    if (this.route.snapshot.queryParams['edit'] == 'true') {\n      this.navigationService.getActiveCartOfUser(this.route.snapshot.params['id']).subscribe(data => {\n        this.accountForm.setValue(data);\n      });\n    }\n  }\n  save() {\n    let newAccount;\n    newAccount = this.accountForm.getRawValue();\n    console.log(newAccount);\n    this.navigationService.save(newAccount).subscribe(data => {\n      this.goBack();\n    });\n  }\n  goBack() {\n    this.router.navigate(['']);\n  }\n}\n_class = AccountComponent;\n_class.ɵfac = function AccountComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NavigationService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-account\"]],\n  decls: 29,\n  vars: 1,\n  consts: [[3, \"formGroup\"], [1, \"row\", \"mb-3\"], [1, \"col\"], [\"for\", \"firstname\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"firstname\", \"formControlName\", \"firstname\", 1, \"form-control\"], [\"for\", \"lastname\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"lastname\", \"formControlName\", \"lastname\", 1, \"form-control\"], [1, \"mb-3\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"address\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"address\", \"formControlName\", \"address\", 1, \"form-control\"], [\"for\", \"mobile\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"mobile\", \"formControlName\", \"mobile\", 1, \"form-control\"], [1, \"mx-auto\", \"text-center\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"]],\n  template: function AccountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Account info\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0)(3, \"div\", 1)(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 8);\n      i0.ɵɵtext(14, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 7)(17, \"label\", 10);\n      i0.ɵɵtext(18, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 7)(21, \"label\", 12);\n      i0.ɵɵtext(22, \"Mobile\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 14)(25, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function AccountComponent_Template_button_click_25_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(26, \"Zapamti\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function AccountComponent_Template_button_click_27_listener() {\n        return ctx.goBack();\n      });\n      i0.ɵɵtext(28, \"Nazad\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.accountForm);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAGA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;;;AAQvD,OAAM,MAAOC,gBAAgB;EAI3BC,YACUC,iBAAoC,EACpCC,KAAqB,EACrBC,MAAc;IAFd,sBAAiB,GAAjBF,iBAAiB;IACjB,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;EACb;EAGHC,QAAQ;IACN,IAAI,CAAEC,WAAW,GAAG,IAAIP,SAAS,CAAC;MAChCQ,SAAS,EAAE,IAAIT,WAAW,EAAE;MAC5BU,QAAQ,EAAE,IAAIV,WAAW,EAAE;MAC3BW,KAAK,EAAE,IAAIX,WAAW,EAAE;MACxBY,OAAO,EAAE,IAAIZ,WAAW,EAAE;MAC1Ba,MAAM,EAAE,IAAIb,WAAW,EAAE;MACzBc,EAAE,EAAE,IAAId,WAAW;KACpB,CAAC;IACF,IAAI,IAAI,CAACK,KAAK,CAACU,QAAQ,CAACC,WAAW,CAAC,MAAM,CAAC,IAAI,MAAM,EAAE;MACrD,IAAI,CAACZ,iBAAiB,CACnBa,mBAAmB,CAAC,IAAI,CAACZ,KAAK,CAACU,QAAQ,CAACG,MAAM,CAAC,IAAI,CAAC,CAAC,CACrDC,SAAS,CAAEC,IAAS,IAAI;QACvB,IAAI,CAACZ,WAAW,CAACa,QAAQ,CAACD,IAAI,CAAC;MACjC,CAAC,CAAC;;EAER;EAEAE,IAAI;IACF,IAAIC,UAAgB;IACpBA,UAAU,GAAG,IAAI,CAACf,WAAW,CAACgB,WAAW,EAAE;IAC3CC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;IACvB,IAAI,CAACnB,iBAAiB,CAACkB,IAAI,CAACC,UAAU,CAAC,CAACJ,SAAS,CAACC,IAAI,IAAG;MACvD,IAAI,CAACO,MAAM,EAAE;IACf,CAAC,CAAC;EAEJ;EAGAA,MAAM;IACJ,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;;SA1CW1B,gBAAgB;;mBAAhBA,MAAgB;AAAA;;QAAhBA,MAAgB;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX7BC,0BAAI;MAAAA,4BAAY;MAAAA,iBAAK;MACrBA,+BAAiC;MAIeA,0BAAU;MAAAA,iBAAQ;MAC5DA,2BAAmF;MAEnFA,8BAAiB;MAC0BA,0BAAS;MAAAA,iBAAQ;MAC1DA,4BAAiF;MAEnFA,iBAAM;MAGRA,+BAAkB;MACsBA,sBAAK;MAAAA,iBAAQ;MACnDA,4BAA2E;MAG7EA,iBAAM;MACNA,+BAAkB;MACwBA,wBAAO;MAAAA,iBAAQ;MACvDA,6BAA+E;MAEjFA,iBAAM;MAENA,+BAAkB;MACuBA,uBAAM;MAAAA,iBAAQ;MACrDA,6BAA6E;MAE/EA,iBAAM;MAORA,gCAAiC;MACWA;QAAA,OAASC,UAAM;MAAA,EAAC;MAACD,wBAAO;MAAAA,iBAAS;MAC3EA,mCAA4D;MAAnBA;QAAA,OAASC,YAAQ;MAAA,EAAC;MAACD,sBAAK;MAAAA,iBAAS;;;MAvCxEA,eAAyB;MAAzBA,2CAAyB","names":["FormControl","FormGroup","AccountComponent","constructor","navigationService","route","router","ngOnInit","accountForm","firstName","lastName","email","address","mobile","id","snapshot","queryParams","getActiveCartOfUser","params","subscribe","data","setValue","save","newAccount","getRawValue","console","log","goBack","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\tamar\\Desktop\\ECommerce\\ECommerceFront\\src\\app\\account\\account.component.ts","C:\\Users\\tamar\\Desktop\\ECommerce\\ECommerceFront\\src\\app\\account\\account.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NavigationService } from '../services/navigation.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit{\n\n  accountForm: FormGroup;\n\n  constructor(\n    private navigationService: NavigationService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n\n  ngOnInit(): void {\n    this. accountForm = new FormGroup({\n      firstName: new FormControl(),\n      lastName: new FormControl(),\n      email: new FormControl(),\n      address: new FormControl(),\n      mobile: new FormControl(),\n      id: new FormControl(),\n    });\n    if (this.route.snapshot.queryParams['edit'] == 'true') {\n      this.navigationService\n        .getActiveCartOfUser(this.route.snapshot.params['id'])\n        .subscribe((data: any) => {\n          this.accountForm.setValue(data);\n        });\n    }\n  }\n\n  save() {\n    let newAccount: User;\n    newAccount = this.accountForm.getRawValue();\n    console.log(newAccount);\n    this.navigationService.save(newAccount).subscribe(data =>{\n      this.goBack();\n    });\n\n  }\n\n\n  goBack() {\n    this.router.navigate(['']);\n  }\n}\n","<h1>Account info</h1>\n<form [formGroup]=\"accountForm\" >\n\n  <div class=\"row mb-3\">\n    <div class=\"col\">\n      <label for=\"firstname\" class=\"form-label\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstname\" formControlName=\"firstname\">\n\n      <div class=\"col\">\n        <label for=\"lastname\" class=\"form-label\">Last Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"lastname\" formControlName=\"lastname\">\n\n      </div>\n    </div>\n\n    <div class=\"mb-3\">\n      <label for=\"email\" class=\"form-label\">Email</label>\n      <input type=\"text\" class=\"form-control\" id=\"email\" formControlName=\"email\">\n\n\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"address\" class=\"form-label\">Address</label>\n      <input type=\"text\" class=\"form-control\" id=\"address\" formControlName=\"address\">\n\n    </div>\n\n    <div class=\"mb-3\">\n      <label for=\"mobile\" class=\"form-label\">Mobile</label>\n      <input type=\"text\" class=\"form-control\" id=\"mobile\" formControlName=\"mobile\">\n\n    </div>\n\n\n  </div>\n\n\n  <!-- account button -->\n  <div class=\"mx-auto text-center\">\n    <button mat-raised-button color=\"primary\" (click)=\"save()\">Zapamti</button>\n    <button mat-raised-button color=\"accent\" (click)=\"goBack()\">Nazad</button>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}