{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./navigation.service\";\nexport class UserAuthenticationService {\n  constructor(navigationService) {\n    this.navigationService = navigationService;\n  }\n  setUser(token) {\n    localStorage.setItem('user', token);\n  }\n  isLoggedIn() {\n    return localStorage.getItem('user') ? true : false;\n  }\n  loggoutUser() {\n    localStorage.removeItem('user');\n  }\n}\n_class = UserAuthenticationService;\n_class.ɵfac = function UserAuthenticationService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.NavigationService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,yBAAyB;EAEpCC,YAEUC,iBAAoC;IAApC,sBAAiB,GAAjBA,iBAAiB;EACvB;EAIFC,OAAO,CAACC,KAAa;IACnBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEF,KAAK,CAAC;EACrC;EAEAG,UAAU;IACR,OAAOF,YAAY,CAACG,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,KAAK;EACpD;EAEAC,WAAW;IACTJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;EACjC;;SAnBSV,yBAAyB;;mBAAzBA,MAAyB;AAAA;;SAAzBA,MAAyB;EAAAW,SAAzBX,MAAyB;EAAAY,YAFxB;AAAM","names":["UserAuthenticationService","constructor","navigationService","setUser","token","localStorage","setItem","isLoggedIn","getItem","loggoutUser","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\tamar\\Desktop\\ECommerce\\ECommerceFront\\src\\app\\services\\user-authentication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { NavigationService } from './navigation.service';\nimport { User } from '../models/user';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAuthenticationService {\n\n  constructor(\n\n    private navigationService: NavigationService,\n  ) { }\n\n\n\n    setUser(token: string) {\n      localStorage.setItem('user', token)\n    }\n\n    isLoggedIn() {\n      return localStorage.getItem('user') ? true : false;\n    }\n\n    loggoutUser() {\n      localStorage.removeItem('user')\n    }\n\n    // getUser(): User {\n    //   let token = this.jwt.decodeToken();\n    //   let user: User = {\n    //     id: token.id,\n    //     firstName: token.firstName,\n    //     lastName: token.lastName,\n    //     email: token.email,\n    //     address: token.address,\n    //     mobile: token.mobile,\n    //     password: '',\n    //     createdAt: token.createdAt,\n    //     modifiedAt: token.modifiedAt,\n    //   };\n    //   return user;\n    // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}